name: ContainerVision CI

on:
  push:
    branches: [ main, data_preparation ]
    paths:
      - 'src/**'
      - 'data/**'
      - 'runs/**'
      - 'main.py'

  pull_request:
    branches: [ main, data_preparation ]
    paths:
      - 'src/**'
      - 'data/**'
      - 'runs/**'
      - 'main.py'

jobs:
  pipeline_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # adjust as needed

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Pick a random image from data/test
      id: pick_image
      run: |
        echo "Searching for images in data/test/"
        RANDOM_IMAGE=$(find data/test -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' \) | shuf -n 1)
        echo "Picked image: $RANDOM_IMAGE"
        echo "image_path=$RANDOM_IMAGE" >> $GITHUB_OUTPUT

    - name: Run main pipeline script
      run: |
        python main.py \
          --image "${{ steps.pick_image.outputs.image_path }}" \
          --model weights/best.pt \
          --char_model char_cnn.pth \
          --object_type seal code \
          --conf 0.25 \
          --iou 0.45 \
          --output output_test.jpg

      continue-on-error: true  # remove this when models are always available